@using Application.Products
@using Domain.Products.Entities
@using Presentation.Core.Components
@inject IProductService ProductService
@page "/"

@if(!_loading){
    <MudTable @ref="@_table" Items="@_stock" RowsPerPage="4" Hover="true" Breakpoint="Breakpoint.Sm" Filter="new Func<Product,bool>(FilterFunction)">
        <ToolBarContent>
            <MudText Align="Align.Center" Typo="Typo.h6">Refrescos disponibles</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="_searchString" Placeholder="Buscar refresco" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent> 
        <HeaderContent>
            <MudTh>Nombre</MudTh>
            <MudTh>Unidades disponibles</MudTh>
            <MudTh>Unidades solicitadas</MudTh>
            <MudTh>Precio unitario</MudTh>
        </HeaderContent>

        <RowTemplate>
            <MudTd DataLabel="Nombre">@context.name</MudTd>
            <MudTd DataLabel="Unidades disponibles">@context.amount</MudTd>
            <MudTd DataLabel="Unidades solicitadas">@context.amount</MudTd>
            <MudTd DataLabel="Precio unitario"> ₡ @context.price</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudPagination SelectedChanged="PageChanged" Count="@((_table.GetFilteredItemsCount() + _table.RowsPerPage - 1) / _table.RowsPerPage)" Color="Color.Primary" Class="pa-4"/>
        </PagerContent>
    </MudTable>
}else{
    <Loading />
}

@code{
    private IList<Product> _stock = new List<Product>();
    private MudTable<Product> _table;
    private bool _loading = true;
    private string _searchString = "";

    protected override void OnInitialized()
    {
        _stock = ProductService.GetAvailableProducts();
        _loading = false;
    }

    private bool FilterFunction(Product element) => Filter(element, _searchString);
    private bool Filter(Product element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.name.Contains(searchString))
            return true;
        return false;
    }

    private void PageChanged(int i)
    {
        _table.NavigateTo(i - 1);
    }
}